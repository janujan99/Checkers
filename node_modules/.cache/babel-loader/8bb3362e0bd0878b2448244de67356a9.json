{"ast":null,"code":"var _jsxFileName = \"/Users/janujansritharan/Projects/Checkers-React/src/board.tsx\";\nimport React from \"react\";\nimport \"./Square.css\";\nimport \"./Board.css\";\nimport \"./checkersState\";\nimport * as Utils from \"./checkersState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.ch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\nexport function Board() {\n  const [checkersState, setCheckersState] = {\n    gameState: Utils.newState(),\n    currentPieceClicked: {\n      x: -1,\n      y: -1\n    }\n  };\n  console.log(\"Render!\");\n  let bigboard = [];\n\n  for (let i = 0; i < 8; i++) {\n    let temp = [];\n\n    for (let j = 0; j < 8; j++) {\n      let square = checkersState.gameState.board.grid[i][j];\n      let chr = null;\n\n      if (square !== null) {\n        let col = square.colour === Utils.Colour.Red ? \"r\" : \"b\";\n        chr = square.hasPromoted ? col.toUpperCase() : col;\n      }\n\n      let val = String(i) + String(j);\n      temp.push( /*#__PURE__*/_jsxDEV(Square, {\n        ch: chr,\n        onClick: () => console.log(chr)\n      }, val, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this));\n    }\n\n    bigboard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: temp\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bigboard\",\n    children: bigboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/janujansritharan/Projects/Checkers-React/src/board.tsx"],"names":["React","Utils","Square","props","onClick","ch","Board","checkersState","setCheckersState","gameState","newState","currentPieceClicked","x","y","console","log","bigboard","i","temp","j","square","board","grid","chr","col","colour","Colour","Red","hasPromoted","toUpperCase","val","String","push"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAO,aAAP;AACA,OAAO,iBAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEA,KAAK,CAACC,OAAvC;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQH,M;AAQT,OAAO,SAASI,KAAT,GAAiB;AACtB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC;AACxCC,IAAAA,SAAS,EAAER,KAAK,CAACS,QAAN,EAD6B;AAExCC,IAAAA,mBAAmB,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAC,CAAN;AAASC,MAAAA,CAAC,EAAE,CAAC;AAAb;AAFmB,GAA1C;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAIC,MAA4B,GAC9Bb,aAAa,CAACE,SAAd,CAAwBY,KAAxB,CAA8BC,IAA9B,CAAmCL,CAAnC,EAAsCE,CAAtC,CADF;AAEA,UAAII,GAAkB,GAAG,IAAzB;;AACA,UAAIH,MAAM,KAAK,IAAf,EAAqB;AACnB,YAAII,GAAW,GAAGJ,MAAM,CAAEK,MAAR,KAAmBxB,KAAK,CAACyB,MAAN,CAAaC,GAAhC,GAAsC,GAAtC,GAA4C,GAA9D;AACAJ,QAAAA,GAAG,GAAGH,MAAM,CAAEQ,WAAR,GAAsBJ,GAAG,CAACK,WAAJ,EAAtB,GAA0CL,GAAhD;AACD;;AACD,UAAIM,GAAW,GAAGC,MAAM,CAACd,CAAD,CAAN,GAAYc,MAAM,CAACZ,CAAD,CAApC;AACAD,MAAAA,IAAI,CAACc,IAAL,eAAU,QAAC,MAAD;AAAkB,QAAA,EAAE,EAAET,GAAtB;AAA2B,QAAA,OAAO,EAAE,MAAMT,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAA1C,SAAaO,GAAb;AAAA;AAAA;AAAA;AAAA,cAAV;AACD;;AACDd,IAAAA,QAAQ,CAACgB,IAAT,eACE;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA,gBACGd;AADH,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;MA5BeV,K","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Square.css\";\nimport \"./Board.css\";\nimport \"./checkersState\";\nimport * as Utils from \"./checkersState\";\n\nfunction Square(props: any) {\n  return (\n    <div className=\"square\" onClick={props.onClick}>\n      {props.ch}\n    </div>\n  );\n}\n\nexport function Board() {\n  const [checkersState, setCheckersState] = {\n    gameState: Utils.newState(),\n    currentPieceClicked: { x: -1, y: -1 },\n  };\n\n  console.log(\"Render!\");\n  let bigboard = [];\n  for (let i = 0; i < 8; i++) {\n    let temp = [];\n    for (let j = 0; j < 8; j++) {\n      let square: Utils.Checker | null =\n        checkersState.gameState.board.grid[i][j];\n      let chr: string | null = null;\n      if (square !== null) {\n        let col: string = square!.colour === Utils.Colour.Red ? \"r\" : \"b\";\n        chr = square!.hasPromoted ? col.toUpperCase() : col;\n      }\n      let val: string = String(i) + String(j);\n      temp.push(<Square key={val} ch={chr} onClick={() => console.log(chr)} />);\n    }\n    bigboard.push(\n      <div key={i} className=\"row\">\n        {temp}\n      </div>\n    );\n  }\n  return <div className=\"bigboard\">{bigboard}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}