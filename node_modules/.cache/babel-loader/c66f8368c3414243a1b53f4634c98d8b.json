{"ast":null,"code":"var _jsxFileName = \"/Users/janujansritharan/Projects/Checkers-React/src/board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Square.css\";\nimport \"./Board.css\";\nimport \"./checkersState\";\nimport { Colour, newState, getCaptureMoves } from \"./checkersState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.ch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\nexport function CheckerBoard() {\n  _s();\n\n  const [checkersState, setCheckersState] = useState({\n    gameState: newState(),\n    currentPieceClicked: null,\n    currentMovesDisplayed: null\n  });\n\n  function getNewCheckersState(i, j) {\n    let board = checkersState.gameState.board;\n    let square = board.grid[i][j];\n\n    if (square != null) {\n      console.log(getCaptureMoves(square, board));\n    }\n  }\n\n  console.log(\"Render!\");\n  let bigboard = [];\n\n  for (let i = 0; i < 8; i++) {\n    let temp = [];\n\n    for (let j = 0; j < 8; j++) {\n      let square = checkersState.gameState.board.grid[i][j];\n      let chr = null;\n\n      if (square !== null) {\n        let col = square.colour === Colour.Red ? \"r\" : \"b\";\n        chr = square.hasPromoted ? col.toUpperCase() : col;\n      }\n\n      let val = String(i) + String(j);\n      temp.push( /*#__PURE__*/_jsxDEV(Square, {\n        ch: chr,\n        onClick: () => getNewCheckersState(i, j)\n      }, val, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this));\n    }\n\n    bigboard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: temp\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bigboard\",\n    children: bigboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CheckerBoard, \"56Z19q3pMIAsiZGaR2Sk5j1tRxs=\");\n\n_c2 = CheckerBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"CheckerBoard\");","map":{"version":3,"sources":["/Users/janujansritharan/Projects/Checkers-React/src/board.tsx"],"names":["React","useState","Colour","newState","getCaptureMoves","Square","props","onClick","ch","CheckerBoard","checkersState","setCheckersState","gameState","currentPieceClicked","currentMovesDisplayed","getNewCheckersState","i","j","board","square","grid","console","log","bigboard","temp","chr","col","colour","Red","hasPromoted","toUpperCase","val","String","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAO,aAAP;AACA,OAAO,iBAAP;AACA,SACEC,MADF,EAOEC,QAPF,EAWEC,eAXF,QAYO,iBAZP;;;AAcA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEA,KAAK,CAACC,OAAvC;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQH,M;AAQT,OAAO,SAASI,YAAT,GAAwB;AAAA;;AAC7B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC;AACjDW,IAAAA,SAAS,EAAET,QAAQ,EAD8B;AAEjDU,IAAAA,mBAAmB,EAAE,IAF4B;AAGjDC,IAAAA,qBAAqB,EAAE;AAH0B,GAAD,CAAlD;;AAMA,WAASC,mBAAT,CAA6BC,CAA7B,EAAwCC,CAAxC,EAAmD;AACjD,QAAIC,KAAY,GAAGR,aAAa,CAACE,SAAd,CAAwBM,KAA3C;AACA,QAAIC,MAAsB,GAAGD,KAAK,CAACE,IAAN,CAAWJ,CAAX,EAAcC,CAAd,CAA7B;;AACA,QAAIE,MAAM,IAAI,IAAd,EAAoB;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAYlB,eAAe,CAACe,MAAD,EAASD,KAAT,CAA3B;AACD;AACF;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIQ,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAIE,MAAsB,GAAGT,aAAa,CAACE,SAAd,CAAwBM,KAAxB,CAA8BE,IAA9B,CAAmCJ,CAAnC,EAAsCC,CAAtC,CAA7B;AACA,UAAIQ,GAAkB,GAAG,IAAzB;;AACA,UAAIN,MAAM,KAAK,IAAf,EAAqB;AACnB,YAAIO,GAAW,GAAGP,MAAM,CAAEQ,MAAR,KAAmBzB,MAAM,CAAC0B,GAA1B,GAAgC,GAAhC,GAAsC,GAAxD;AACAH,QAAAA,GAAG,GAAGN,MAAM,CAAEU,WAAR,GAAsBH,GAAG,CAACI,WAAJ,EAAtB,GAA0CJ,GAAhD;AACD;;AACD,UAAIK,GAAW,GAAGC,MAAM,CAAChB,CAAD,CAAN,GAAYgB,MAAM,CAACf,CAAD,CAApC;AACAO,MAAAA,IAAI,CAACS,IAAL,eACE,QAAC,MAAD;AAAkB,QAAA,EAAE,EAAER,GAAtB;AAA2B,QAAA,OAAO,EAAE,MAAMV,mBAAmB,CAACC,CAAD,EAAIC,CAAJ;AAA7D,SAAac,GAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AACDR,IAAAA,QAAQ,CAACU,IAAT,eACE;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA,gBACGT;AADH,OAAUR,CAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAA2BO;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCed,Y;;MAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Square.css\";\nimport \"./Board.css\";\nimport \"./checkersState\";\nimport {\n  Colour,\n  TurnType,\n  Turn,\n  Board,\n  Position,\n  Checker,\n  newState,\n  CheckersState,\n  isValidCoordinate,\n  isValidPiece,\n  getCaptureMoves,\n} from \"./checkersState\";\n\nfunction Square(props: any) {\n  return (\n    <div className=\"square\" onClick={props.onClick}>\n      {props.ch}\n    </div>\n  );\n}\n\nexport function CheckerBoard() {\n  const [checkersState, setCheckersState] = useState({\n    gameState: newState(),\n    currentPieceClicked: null,\n    currentMovesDisplayed: null,\n  });\n\n  function getNewCheckersState(i: number, j: number) {\n    let board: Board = checkersState.gameState.board;\n    let square: Checker | null = board.grid[i][j];\n    if (square != null) {\n      console.log(getCaptureMoves(square, board));\n    }\n  }\n  console.log(\"Render!\");\n  let bigboard = [];\n  for (let i = 0; i < 8; i++) {\n    let temp = [];\n    for (let j = 0; j < 8; j++) {\n      let square: Checker | null = checkersState.gameState.board.grid[i][j];\n      let chr: string | null = null;\n      if (square !== null) {\n        let col: string = square!.colour === Colour.Red ? \"r\" : \"b\";\n        chr = square!.hasPromoted ? col.toUpperCase() : col;\n      }\n      let val: string = String(i) + String(j);\n      temp.push(\n        <Square key={val} ch={chr} onClick={() => getNewCheckersState(i, j)} />\n      );\n    }\n    bigboard.push(\n      <div key={i} className=\"row\">\n        {temp}\n      </div>\n    );\n  }\n  return <div className=\"bigboard\">{bigboard}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}