{"ast":null,"code":"var _jsxFileName = \"/Users/janujansritharan/Projects/Checkers-React/checkers/src/board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Square.css\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.ch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\nvar Colour;\n\n(function (Colour) {\n  Colour[Colour[\"Red\"] = 1] = \"Red\";\n  Colour[Colour[\"Black\"] = 2] = \"Black\";\n})(Colour || (Colour = {}));\n\nexport function Board() {\n  _s();\n\n  const [redsTurn, setTurn] = useState(true);\n  const [validPieceSelected, setValidPieceSelected] = useState(false);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [board, setBoard] = useState([[null, {\n    colour: Colour.Black,\n    x: 1,\n    y: 0,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 3,\n    y: 0,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 5,\n    y: 0,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 7,\n    y: 0,\n    hasPromoted: false\n  }], [{\n    colour: Colour.Black,\n    x: 0,\n    y: 1,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 2,\n    y: 1,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 4,\n    y: 1,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 6,\n    y: 1,\n    hasPromoted: false\n  }, null], [null, {\n    colour: Colour.Black,\n    x: 1,\n    y: 2,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 3,\n    y: 2,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 5,\n    y: 2,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Black,\n    x: 7,\n    y: 2,\n    hasPromoted: false\n  }], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [{\n    colour: Colour.Red,\n    x: 0,\n    y: 5,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 2,\n    y: 5,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 4,\n    y: 5,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 6,\n    y: 5,\n    hasPromoted: false\n  }, null], [null, {\n    colour: Colour.Red,\n    x: 1,\n    y: 6,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 3,\n    y: 6,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 5,\n    y: 6,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 7,\n    y: 6,\n    hasPromoted: false\n  }], [{\n    colour: Colour.Red,\n    x: 0,\n    y: 7,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 2,\n    y: 7,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 4,\n    y: 7,\n    hasPromoted: false\n  }, null, {\n    colour: Colour.Red,\n    x: 6,\n    y: 7,\n    hasPromoted: false\n  }, null]]);\n  const [displayBoard, setDisplayBoard] = useState(makeDisplayBoard());\n\n  function isValidCoordinate(coordinate) {\n    return coordinate[0] >= 0 && coordinate[0] < 8 && coordinate[1] >= 0 && coordinate[1] < 8;\n  }\n\n  function getMoves(x, y) {\n    console.log(\"Before: \" + validPieceSelected);\n    let validPiece = board[y][x] != null && (board[y][x].colour === Colour.Red && redsTurn || board[y][x].colour === Colour.Black && !redsTurn);\n    console.log(\"Actual: \" + validPiece);\n    setValidPieceSelected(validPiece);\n    console.log(\"After: \" + validPieceSelected);\n    if (validPieceSelected) displayMoves(getNonCaptureMoves(x, y).concat(getCaptureMoves(x, y)));\n  }\n\n  function getNonCaptureMoves(x, y) {\n    let moves;\n    let directionFactor = board[y][x].colour === Colour.Red ? -1 : 1; //get possible move locations\n\n    if (board[y][x].hasPromoted) moves = [[x + 1, y + 1], [x - 1, y + 1], [x + 1, y - 1], [x - 1, y - 1]];else moves = [[x + 1, y + directionFactor], [x - 1, y + directionFactor]];\n    let filteredMoves = [];\n\n    for (let i = 0; i < moves.length; i++) {\n      if (isValidCoordinate(moves[i]) && board[moves[i][1]][moves[i][0]] == null) {\n        filteredMoves.push(moves[i]);\n      }\n    }\n\n    return filteredMoves;\n  }\n\n  function getCaptureMoves(x, y) {\n    let moves;\n    let directionFactor = board[y][x].colour === Colour.Red ? -1 : 1;\n\n    if (board[y][x].hasPromoted) {\n      moves = [[x + 2, y + 2], [x - 2, y + 2], [x + 2, y - 2], [x - 2, y - 2]];\n    } else {\n      moves = [[x + 2, y + 2 * directionFactor], [x - 2, y + 2 * directionFactor]];\n    }\n\n    let filtered_moves = [];\n\n    for (let i = 0; i < moves.length; i++) {\n      var _board;\n\n      let move_x = moves[i][0];\n      let move_y = moves[i][1];\n\n      if (isValidCoordinate(moves[i]) && board[move_y][move_x] == null && board[(move_y + y) / 2][(move_x + x) / 2] != null && ((_board = board[(move_y + y) / 2][(move_x + x) / 2]) === null || _board === void 0 ? void 0 : _board.colour) !== board[y][x].colour) {\n        filtered_moves.push(moves[i]);\n      }\n    }\n\n    return filtered_moves;\n  }\n\n  function makeDisplayBoard() {\n    let tempBoard = [];\n\n    for (let i = 0; i < 8; i++) {\n      let temp = [];\n\n      for (let j = 0; j < 8; j++) {\n        if (!board[i][j]) temp.push(null);else {\n          if (board[i][j].colour === Colour.Red) {\n            if (board[i][j].hasPromoted) temp.push(\"R\");else temp.push(\"r\");\n          } else {\n            if (board[i][j].hasPromoted) temp.push(\"B\");else temp.push(\"b\");\n          }\n        }\n      }\n\n      tempBoard.push(temp);\n    }\n\n    return tempBoard;\n  }\n\n  function displayMoves(moves) {\n    let tempBoard = [];\n\n    for (let i = 0; i < 8; i++) {\n      let temp = [];\n\n      for (let j = 0; j < 8; j++) {\n        temp.push(displayBoard[i][j]);\n      }\n\n      tempBoard.push(temp);\n    } // clear board of existing moves that are displayed\n\n\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (tempBoard[i][j] === \".\") tempBoard[i][j] = null;\n      }\n    } // place marker on squares where valid piece can move\n\n\n    for (let i = 0; i < moves.length; i++) tempBoard[moves[i][1]][moves[i][0]] = \".\";\n\n    setDisplayBoard(tempBoard);\n    console.log(tempBoard);\n  }\n\n  console.log(\"Render!\");\n  let bigboard = [];\n\n  for (let i = 0; i < 8; i++) {\n    let temp = [];\n\n    for (let j = 0; j < 8; j++) {\n      let val = String(i) + String(j);\n      temp.push( /*#__PURE__*/_jsxDEV(Square, {\n        ch: displayBoard[i][j],\n        onClick: () => getMoves(j, i)\n      }, val, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this));\n    }\n\n    bigboard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: temp\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bigboard\",\n    children: bigboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Board, \"zrJgIkYNaWKX3c9r0YNHs0uZZNY=\");\n\n_c2 = Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/janujansritharan/Projects/Checkers-React/checkers/src/board.tsx"],"names":["React","useState","Square","props","onClick","ch","Colour","Board","redsTurn","setTurn","validPieceSelected","setValidPieceSelected","selectedPiece","setSelectedPiece","board","setBoard","colour","Black","x","y","hasPromoted","Red","displayBoard","setDisplayBoard","makeDisplayBoard","isValidCoordinate","coordinate","getMoves","console","log","validPiece","displayMoves","getNonCaptureMoves","concat","getCaptureMoves","moves","directionFactor","filteredMoves","i","length","push","filtered_moves","move_x","move_y","tempBoard","temp","j","bigboard","val","String"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Square.css\";\nimport \"./Board.css\";\n\nfunction Square(props: any) {\n  return (\n    <div className=\"square\" onClick={props.onClick}>\n      {props.ch}\n    </div>\n  );\n}\n\nenum Colour {\n  Red = 1,\n  Black = 2,\n}\n\ninterface Checker {\n  colour: Colour;\n  x: number;\n  y: number;\n  hasPromoted: boolean;\n}\n\nexport function Board() {\n  const [redsTurn, setTurn] = useState(true);\n  const [validPieceSelected, setValidPieceSelected] = useState(false);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [board, setBoard] = useState([\n    [\n      null,\n      { colour: Colour.Black, x: 1, y: 0, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 3, y: 0, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 5, y: 0, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 7, y: 0, hasPromoted: false },\n    ],\n    [\n      { colour: Colour.Black, x: 0, y: 1, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 2, y: 1, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 4, y: 1, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 6, y: 1, hasPromoted: false },\n      null,\n    ],\n    [\n      null,\n      { colour: Colour.Black, x: 1, y: 2, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 3, y: 2, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 5, y: 2, hasPromoted: false },\n      null,\n      { colour: Colour.Black, x: 7, y: 2, hasPromoted: false },\n    ],\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null],\n    [\n      { colour: Colour.Red, x: 0, y: 5, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 2, y: 5, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 4, y: 5, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 6, y: 5, hasPromoted: false },\n      null,\n    ],\n    [\n      null,\n      { colour: Colour.Red, x: 1, y: 6, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 3, y: 6, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 5, y: 6, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 7, y: 6, hasPromoted: false },\n    ],\n    [\n      { colour: Colour.Red, x: 0, y: 7, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 2, y: 7, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 4, y: 7, hasPromoted: false },\n      null,\n      { colour: Colour.Red, x: 6, y: 7, hasPromoted: false },\n      null,\n    ],\n  ]);\n  const [displayBoard, setDisplayBoard] = useState(makeDisplayBoard());\n\n  function isValidCoordinate(coordinate: number[]) {\n    return (\n      coordinate[0] >= 0 &&\n      coordinate[0] < 8 &&\n      coordinate[1] >= 0 &&\n      coordinate[1] < 8\n    );\n  }\n\n  function getMoves(x: number, y: number) {\n    console.log(\"Before: \" + validPieceSelected);\n    let validPiece: boolean =\n      board[y][x] != null &&\n      ((board[y][x]!.colour === Colour.Red && redsTurn) ||\n        (board[y][x]!.colour === Colour.Black && !redsTurn));\n\n    console.log(\"Actual: \" + validPiece);\n    setValidPieceSelected(validPiece);\n    console.log(\"After: \" + validPieceSelected);\n    if (validPieceSelected)\n      displayMoves(getNonCaptureMoves(x, y).concat(getCaptureMoves(x, y)));\n  }\n\n  function getNonCaptureMoves(x: number, y: number) {\n    let moves: number[][];\n    let directionFactor: number = board[y][x]!.colour === Colour.Red ? -1 : 1;\n    //get possible move locations\n    if (board[y][x]!.hasPromoted)\n      moves = [\n        [x + 1, y + 1],\n        [x - 1, y + 1],\n        [x + 1, y - 1],\n        [x - 1, y - 1],\n      ];\n    else\n      moves = [\n        [x + 1, y + directionFactor],\n        [x - 1, y + directionFactor],\n      ];\n\n    let filteredMoves: number[][] = [];\n    for (let i = 0; i < moves.length; i++) {\n      if (\n        isValidCoordinate(moves[i]) &&\n        board[moves[i][1]][moves[i][0]] == null\n      ) {\n        filteredMoves.push(moves[i]);\n      }\n    }\n    return filteredMoves;\n  }\n\n  function getCaptureMoves(x: number, y: number) {\n    let moves: number[][];\n    let directionFactor: number = board[y][x]!.colour === Colour.Red ? -1 : 1;\n\n    if (board[y][x]!.hasPromoted) {\n      moves = [\n        [x + 2, y + 2],\n        [x - 2, y + 2],\n        [x + 2, y - 2],\n        [x - 2, y - 2],\n      ];\n    } else {\n      moves = [\n        [x + 2, y + 2 * directionFactor],\n        [x - 2, y + 2 * directionFactor],\n      ];\n    }\n\n    let filtered_moves: number[][] = [];\n\n    for (let i = 0; i < moves.length; i++) {\n      let move_x: number = moves[i][0];\n      let move_y: number = moves[i][1];\n\n      if (\n        isValidCoordinate(moves[i]) &&\n        board[move_y][move_x] == null &&\n        board[(move_y + y) / 2][(move_x + x) / 2] != null &&\n        board[(move_y + y) / 2][(move_x + x) / 2]?.colour !==\n          board[y][x]!.colour\n      ) {\n        filtered_moves.push(moves[i]);\n      }\n    }\n    return filtered_moves;\n  }\n\n  function makeDisplayBoard() {\n    let tempBoard: (string | null)[][] = [];\n    for (let i = 0; i < 8; i++) {\n      let temp: (string | null)[] = [];\n      for (let j = 0; j < 8; j++) {\n        if (!board[i][j]) temp.push(null);\n        else {\n          if (board[i][j]!.colour === Colour.Red) {\n            if (board[i][j]!.hasPromoted) temp.push(\"R\");\n            else temp.push(\"r\");\n          } else {\n            if (board[i][j]!.hasPromoted) temp.push(\"B\");\n            else temp.push(\"b\");\n          }\n        }\n      }\n      tempBoard.push(temp);\n    }\n    return tempBoard;\n  }\n\n  function displayMoves(moves: number[][]) {\n    let tempBoard: (string | null)[][] = [];\n\n    for (let i = 0; i < 8; i++) {\n      let temp = [];\n      for (let j = 0; j < 8; j++) {\n        temp.push(displayBoard[i][j]);\n      }\n      tempBoard.push(temp);\n    }\n    // clear board of existing moves that are displayed\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (tempBoard[i][j]! === \".\") tempBoard[i][j] = null;\n      }\n    }\n    // place marker on squares where valid piece can move\n    for (let i = 0; i < moves.length; i++)\n      tempBoard[moves[i][1]][moves[i][0]] = \".\";\n\n    setDisplayBoard(tempBoard);\n    console.log(tempBoard);\n  }\n\n  console.log(\"Render!\");\n  let bigboard = [];\n  for (let i = 0; i < 8; i++) {\n    let temp = [];\n    for (let j = 0; j < 8; j++) {\n      let val: string = String(i) + String(j);\n      temp.push(\n        <Square\n          key={val}\n          ch={displayBoard[i][j]}\n          onClick={() => getMoves(j, i)}\n        />\n      );\n    }\n    bigboard.push(\n      <div key={i} className=\"row\">\n        {temp}\n      </div>\n    );\n  }\n  return <div className=\"bigboard\">{bigboard}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}